/// Grid system
// 容器

@mixin make-container($gutter: $grid-gutter-width-base) {
  position: relative;
  padding-left: ($gutter / 2);
  padding-right: ($gutter / 2);
  margin-left: auto;
  margin-right: auto;
}

// 根据 media query 设置响应式容器的最大宽度
@mixin make-container-max-widths($max-widths: $container-max-widths, $responsive: $grid-responsive) {
  // 循环取出键值，然后调用media-responsive-up来设置
  @each $response, $container-max-width in $max-widths {
    @include media-responsive-up($response, $responsive) {
      width: $container-max-width;
      max-width: 100%;
    }
  }
}

//设置 row 样式
@mixin make-row($gutter: $grid-gutter-width-base) {
  display: flex;
  flex-wrap: wrap;
  margin-left: ($gutter / -2);
  margin-right: ($gutter / -2);
}

// 设置列样式
@mixin make-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage($size / $columns);
  // 设置最大宽度，使每列的内容不会超过该宽度，该属性的设置，在 IE10+ 和 Firefox 中使用，
  // Chrome 和 Safari 不需要这样设置
  max-width: percentage($size / $columns);
}

// offset 是指偏移，用 margin-left 设置其偏移量，而 pull 和 push 是指定位位置，用 left 和 right 来设置
@mixin make-col-offset($size, $columns: $grid-columns) {
  margin-left: percentage($size / $columns);
}

@mixin make-col-push($size, $columns: $grid-columns) {
  left: if($size > 0, percentage($size / $columns), auto);
}

@mixin make-col-pull($size, $columns: $grid-columns) {
  right: if($size > 0, percentage($size / $columns), auto);
}

@mixin make-col-modifier($type, $size, $columns) {
  @if $type == push {
    @include make-col-push($size, $columns);
  } @else if $type == pull {
    @include make-col-pull($size, $columns);
  } @else if $type == offset {
    @include make-col-offset($size, $columns);
  }
}
