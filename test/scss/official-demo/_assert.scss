// Test Assertions
// ===============

// 使用 test-module 描述测试某一模块，test 描述测试具体的功能点

@include test-module('Assert True') {
  @include test('Truthiness') {
    @include assert-true(
      'this string',
      'Non-false properties return true.');
  }
}

@include test-module('Assert False') {
  @include test('Falsiness') {
    @include assert-false(
      not 'anything',
      'Negated properties return false.');
  }

  @include test('null') {
    @include assert-false(
      null,
      'Null properties return false.');
  }

  @include test('Empty string') {
    @include assert-false(
      '',
      'Empty string return false.')
  }

  @include test('empty list') {
    @include assert-false(
      (),
      'Empty lists return false.');
  }
}

@include test-module('Assert Equal') {
  @include test('Equality') {
    @include assert-equal(
      2 - 1,
      1,
      '2 - 1 should equal 1.');
  }

  @include test('Empty description') {
    @include assert-equal(1, 1);
  }
}

@include test-module('Assert UnEqual') {
  @include test('Inequality') {
    @include assert-unequal(
      3 - 1,
      3,
      '3 - 1 is not equal to 3.');
  }
}

@include test-module('Assert (output)') {
  @include test('CSS output math') {
    @include assert('Output math compares properly') {
      @include output {
        -property1: .1 + .2;
        -property2: (1 / 3);
      }

      @include expect {
        -property1: 0.3;
        -property2: 0.33333;
      }
    }
  }

  @include test('output/expect [mixins]') {
    @include assert('Output and expected selector patterns match') {
      @include output {
        -property: value;

        @media (min-width: 30em) {
          -prop: val;

          @at-root {
            .selector {
              -prop: val;
            }
          }
        }
      }

      @include expect {
        -property: value;

        @media (min-width: 30em) {
          -prop: val;

          @at-root {
            .selector {
              -prop: val;
            }
          }
        }
      }
    }

    @include assert('Deprecated input alias works for now') {
      @include input(false) {
        .test {
          /* comments are also allowed in assertions */
          -property: value;
        }
      }
      @include expect(false) {
        .test {
          /* comments are also allowed in assertions */
          -property: value;
        }
      }
    }
  }
}
